- name: disable nodejs version
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs:20 version
  ansible.builtin.command: dnf module enable nodejs:20 -y 

- name: Install node js package
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - npm
  - mysql

- name: Add daemon user to run the application
  ansible.builtin.user:
    name: expense

- name: includ from common role
  ansible.builtin.include_role:
    name: common
    tasks_from: main

# - name: setup an app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: Download the backend code
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: Unarchive a file that is already on the remote machine
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: Install npm dependencies
  community.general.npm:
    name: npm
    path: /app

- name: Install python libraries
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  - PyMySQL
  - cryptography

- name: copy backend.service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: import mysql data
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: "{{ MYSQL_USER }}"
    login_password: "{{ MYSQL_PASSWORD }}"
    login_host: "{{ MYSQL_HOST }}"
    target: /app/schema/backend.sql

- name: Daemon reload and enable service
  ansible.builtin.systemd_service:
    daemon_reload: "true"
    enabled: "true"
    state: restarted
    name: backend